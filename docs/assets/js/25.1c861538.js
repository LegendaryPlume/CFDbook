(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{302:function(t,a,s){"use strict";s.r(a);var e=s(10),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-命令简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-命令简介"}},[t._v("#")]),t._v(" 1.命令简介")]),t._v(" "),a("p",[t._v("test 可检查文件类型和比较值。")]),t._v(" "),a("p",[t._v("test 用于检查某个条件是否成立，它可以进行数值、字符串和文件三个方面的测试。")]),t._v(" "),a("p",[t._v("本文介绍的是 GNU 版本的 test，其它版本（如 POSIX 版）的实现可能会有所不同。")]),t._v(" "),a("h2",{attrs:{id:"_2-命令格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令格式"}},[t._v("#")]),t._v(" 2.命令格式")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("test\ntest EXPRESSION\n")])])]),a("p",[t._v("省略表达式 EXPRESSION 默认为 false。[] 实际上是 Bash 中 test 命令的简写，即所有的 test EXPRESSION 等于 [ EXPRESSION ]。")]),t._v(" "),a("h2",{attrs:{id:"_3-选项说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-选项说明"}},[t._v("#")]),t._v(" 3.选项说明")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("--help\n\t显示帮助信息并退出\n--version\n\t显示版本信息并退出\n")])])]),a("p",[t._v("注意，虽然 test 拥有选项 --help 与 --version，但无法使用。test 将这两个选项当做非空的普通字符串进行处理，并返回 true。")]),t._v(" "),a("h2",{attrs:{id:"_4-expression"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-expression"}},[t._v("#")]),t._v(" 4.EXPRESSION")]),t._v(" "),a("p",[t._v("test 退出状态码由表达式结果决定，表达式为 true 状态码为 0，表达式为 false，状态码为 1。")]),t._v(" "),a("h3",{attrs:{id:"逻辑运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算"}},[t._v("#")]),t._v(" 逻辑运算")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("! EXPRESSION\n\t逻辑非，EXPRESSION 为 false 返回 true\nEXPRESSION1 -a EXPRESSION2\n\t逻辑与，两个表达式均为 true 返回 true\nEXPRESSION1 -o EXPRESSION2\n\t逻辑或，只要有一个表达式为 true 返回 true\n")])])]),a("h3",{attrs:{id:"数值比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值比较"}},[t._v("#")]),t._v(" 数值比较")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("INTEGER1 -eq INTEGER2\n\t两整数是否相等\nINTEGER1 -ne INTEGER2\n\t整数 INTEGER1 是否不等于 INTEGER2\nINTEGER1 -gt INTEGER2\n\t整数 INTEGER1 是否大于 INTEGER2\nINTEGER1 -ge INTEGER2\n\t整数 INTEGER1 是否大于等于 INTEGER2\nINTEGER1 -lt INTEGER2\n\t整数 INTEGER1 是否小于 INTEGER2\nINTEGER1 -le INTEGER2\n\t整数 INTEGER1 是否小于等于 INTEGER2\n")])])]),a("h3",{attrs:{id:"字符串比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串比较"}},[t._v("#")]),t._v(" 字符串比较")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-n STRING\n\t字符串不为空返回 true\n-z STRING\n\t字符串为空返回 true\nSTRING1 = STRING2\n\t字符串相等返回 true\nSTRING1 != STRING2\n\t字符串不相等返回 true\n")])])]),a("h3",{attrs:{id:"文件比较与类型判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件比较与类型判断"}},[t._v("#")]),t._v(" 文件比较与类型判断")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("FILE1 -ef FILE2\n\t两个文件是否为同一个文件。主要看文件设备号与 inode 是否一致\nFILE1 -nt FILE2\n\t文件 FILE1 是否比 FILE2 新（修改时间新）\nFILE1 -ot FILE2\n\t文件 FILE1 是否比 FILE2 旧（修改时间旧）\n-b FILE\n\t文件存在且是块（block）设备文件\n-c FILE\n\t文件存在且是字符（character）设备文件\n-d FILE\n\t文件存在且是目录（directory）\n-e FILE\n\t文件存在（exist）返回 true\n-f FILE\n\t文件存在且是普通文件\n-g FILE\n\t文件存在且设置了 SGID\n-G FILE\n\t文件存在且属于有效组ID\n-h FILE\n\t文件存在且是软链接。同 -L\n-k FILE\n\t文件存在且设置了粘着位（Sticky Bit）\n-L FILE\n\t文件存在且是软链接。同 -h\n-O FILE\n\t文件存在且属于有效用户ID\n-p FILE\n\t文件存在且属于命名管道\n-r FILE\n\t文件存在且可读\n-s FILE\n\t文件存在且内容不为空\n-S FILE\n\t文件存在且是一个套接字（socket）\n-t FD\n\t文件描述符是在一个终端打开的\n-u FILE\n\t文件存在且设置了 SUID 位\n-w FILE\n\t文件存在且且可写\n-x FILE\n\t文件存在且可执行\n")])])]),a("p",[t._v("文件的比较与类型判断，除了 -h 与 -L，其它所有的选项都对软链接进行解引用。")]),t._v(" "),a("h2",{attrs:{id:"_5-常用示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-常用示例"}},[t._v("#")]),t._v(" 5.常用示例")]),t._v(" "),a("p",[t._v("（1）判断数值是否相等。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-eq")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("test 退出状态码等于 0 表示条件成立。")]),t._v(" "),a("p",[t._v("（2）判断文件是否存在。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" /etc/passwd\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("test 退出状态码等于 0 表示文件存在。")]),t._v(" "),a("p",[t._v("（3）判断目录是否存在。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" /home\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("（4）判断文件是否是同一个文件。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" /etc/passwd "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ef")]),t._v(" /etc/shadow\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("p",[t._v("test 退出状态码等于 1 表示不是同一个文件。")]),t._v(" "),a("p",[t._v("（5）当 /home 为目录，并且可写时为真。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" /home "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-w")]),t._v(" /home\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("hr"),t._v(" "),a("h2",{attrs:{id:"参考文献"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.gnu.org/software/coreutils/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Coreutils - GNU core utilities"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"http://man7.org/linux/man-pages/man1/test.1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("test(1) - Linux manual page - man7.org"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);