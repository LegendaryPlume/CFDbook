(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{312:function(t,a,n){"use strict";n.r(a);var e=n(10),s=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-命令简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-命令简介"}},[t._v("#")]),t._v(" 1.命令简介")]),t._v(" "),a("p",[t._v("bc（Binary Calculator）用于任意精度的计算，语法类似于 C 语言。Bash 内置了对整数四则运算的支持，但是并不支持浮点运算，而 bc 命令可以很方便地进行浮点运算和整数运算。")]),t._v(" "),a("p",[t._v("本文描述的 GNU 版本超出了传统 bc 的实现和 POSIX 标准。在使用扩展功能时，可以使用命令行选项打印警告或拒绝使用。")]),t._v(" "),a("h2",{attrs:{id:"_2-命令格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令格式"}},[t._v("#")]),t._v(" 2.命令格式")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("bc [-hlwsqv] [long-options] [<file>...]\n")])])]),a("h2",{attrs:{id:"_3-选项说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-选项说明"}},[t._v("#")]),t._v(" 3.选项说明")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-h, --help\n\t显示帮助信息并退出\n-i, --interactive\n\t强制进入交互式模式\n-l, --mathlib\n\t定义使用的标准数学库\n-w, --warn\n\t对 POSIX bc 的扩展给出警告信息\n-s, --standard\n\t完全使用 POSIX 版本的 bc 功能\n-q, --quiet\n\t不打印正常的 GNU bc 环境信息\n-v, --version\n\t打印 bc 版本与版权后退出\n")])])]),a("h2",{attrs:{id:"_4-特殊变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-特殊变量"}},[t._v("#")]),t._v(" 4.特殊变量")]),t._v(" "),a("p",[t._v("bc 在运算过程中将数值存储在两种类型的变量中，简单变量和数组。两种变量均使用字母开头后跟字母、数字或下划线的命名方式且全部小写。其中有四个特殊变量：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("scale\t定义某些操作如何使用小数点后的数字，默认值为 0\nibase\t定义输入数的基数，默认为十进制数\nobase\t定义输出数的基数，默认为十进制数\nlast\t表示最后的输出值\n")])])]),a("h2",{attrs:{id:"_5-注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-注释"}},[t._v("#")]),t._v(" 5.注释")]),t._v(" "),a("p",[t._v("bc 中的块注释使用"),a("code",[t._v("/* */")]),t._v("，行注释使用 #。")]),t._v(" "),a("h2",{attrs:{id:"_6-表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-表达式"}},[t._v("#")]),t._v(" 6.表达式")]),t._v(" "),a("p",[t._v("表达式的输入值可以是 2 到 16 进制的数值，数值的基数由特殊变量 ibase 决定。如果数值中包含字符 A-F，则必须使用大写，因为小写表示变量名。")]),t._v(" "),a("p",[t._v("在下面表达式的描述中，EXPR 指完整表达式，VAR 指简单变量或数组变量。简单变量只是一个名称，数组变量被指定为 NAME[EXPR]。")]),t._v(" "),a("p",[t._v("除非特别提到，结果的精度是表达式中最大的精度。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("基本运算：\n- EXPR\n\t相反数\n++ VAR\n\t自增 1\n-- VAR\n\t自减 1\nVAR ++\n\t表达式的结果是变量的值，然后变量自增 1\nVAR --\n\t表达式的结果是变量的值，然后变量自增 1\nEXPR + EXPR\n\t两个表达式相加\nEXPR - EXPR\n\t两个表达式相减\nEXPR * EXPR\n\t两个表达式相乘\nEXPR / EXPR\n\t两个表达式相除。结果的精度由特殊变量 scale 确定\nEXPR % EXPR\n\t两个表达式取余\nEXPR ^ EXPR\n\t取幂。第二个表达式 EXPR 必须是整数\n( EXPR )\n\t这将更改标准优先级以强制执行表达式的计算\nVAR = EXPR\n\t将表达式的结果赋给变量 VAR\nVAR <OP>= EXPR\n\t这相当于 var = var EXPR\n\n关系运算：\nEXPR1 < EXPR2\nEXPR1 <= EXPR2\nEXPR1 > EXPR2\nEXPR1 >= EXPR2\nEXPR1 == EXPR2\nEXPR1 != EXPR2\n\n逻辑运算：\n!EXPR\nEXPR && EXPR\nEXPR || EXPR\n")])])]),a("p",[t._v("以上表达式涉及的运算符优先级由低到高依次为：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("||\t\t\t左结合\n&&\t\t\t左结合\n!\t\t\t非结合的\n关系运算符\t左结合\n赋值运算符\t由结合\n+, -\t\t左结合\n*, /, %\t\t左结合\n^\t\t\t右结合\n取反运算符\t非结合的\n++, --\t\t非结合的\n")])])]),a("p",[t._v("以上运算符优先级与 C 语言有些出入，使用时需要注意。比如表达式 a = 3 < 5 在 C 语言中 a 的值为 0，在 bc 中，因为 = 的优先级高于 <，所以 a 的值为 3。")]),t._v(" "),a("p",[t._v("bc 中提供了一些特殊的表达式，这些与用户定义的函数和标准函数有关，下文函数一节将会详述。")]),t._v(" "),a("h2",{attrs:{id:"_7-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-语句"}},[t._v("#")]),t._v(" 7.语句")]),t._v(" "),a("p",[t._v("bc 的语句使用分号和换行符进行分隔，下面将介绍 bc 中常用的语句。注意，中括号 [] 中的内容是可选的。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("EXPRESSION\n\t表达式分为赋值表达式与非赋值表达式，如果表达式不是赋值语句，则计算表达式并将其结果打印到输出\nSTRING\n\t使用双引号包围的内容被视为字符串。字符串可以包含特殊字符，使用反斜杠表示，\\a 响铃，\\b 退格，\\f 换页，\\n 换行，\\r 回车，\\q 双引号，\\t 制表符，\\\\ 反斜杠\nprint LIST\n\t使用 print 语句进行输出。LIST 是逗号分隔的字符串或者表达式\n{ STATEMENT_LIST }\n\t这是个复合语句，它允许将多个语句组合在一起执行\nif ( EXPRESSION ) STATEMENT1 [else STATEMENT2]\n\tif 条件语句。如果表达式 EXPRESSION 结果非 0，则执行语句 STATEMENT1，否则执行 STATEMENT2\nwhile ( EXPRESSION ) STATEMENT\n\twhile 循环语句。如果表达式 EXPRESSION 结果非 0，则循环执行语句\nfor ( [EXPRESSION1] ; [EXPRESSION2] ; [EXPRESSION3] ) STATEMENT\n\tfor 循环语句\nbreak\n\t用于退出最近一层的 while 或 for 循环\ncontinue\n\t用于最近一层的 while 或 for 循环提前进入下一轮循环\nhalt\n\t结束 bc\nreturn\n\t从函数中返回 0\nreturn ( EXPRESSION )\n\t从函数返回表达式 EXPRESSION 的值\nlimits\n\t打印 bc 的限制\nquit\n\t结束 bc\nwarranty\n\t打印授权注意事项\n")])])]),a("h2",{attrs:{id:"_8-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-函数"}},[t._v("#")]),t._v(" 8.函数")]),t._v(" "),a("p",[t._v("bc 支持函数，定义形式如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("define [void] NAME ( PARAMETERS ) {\n\tAUTO_LIST   STATEMENT_LIST }\n")])])]),a("p",[t._v("其中 关键字 void 表示函数无返回值，NAME 为函数名，PARAMETERS 为函数参数，AUTO_LIST 为函数内部使用 auto 关键字申明的局部变量，STATEMENT_LIST 为函数 bc 语句。")]),t._v(" "),a("p",[t._v("函数调用形式：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("NAME(PARAMETERS)\n")])])]),a("p",[t._v("常用的内置函数有：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("length ( EXPRESSION )\n\t数值的有效数字的个数\nread ()\n\t从标准输入读取输入\nscale ( EXPRESSION )\n\t数值小数点后的数字的个数\nsqrt ( EXPRESSION )\n\t求平方根。如果 EXPRESSION 是一个负数，则引发运行时错误\n")])])]),a("p",[t._v("如果使用 -l 选项调用 bc，则会预加载一个数学库，并将默认精度设置为 20。数学库定义了以下函数：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("s (x)\n\t求正弦值 sin(x)，x 的单位是弧度\nc (x)\n\t求余弦值 cos()，x 的单位是弧度\na (x)\n\tx 的反正切，反正切返回弧度\nl (x)\n\tx 的自然对数\ne (x)\n\t指数函数，求自然 e 的 x 次幂\nj (n,x)\n\tx 的整数阶 n 的贝塞尔函数\n")])])]),a("h2",{attrs:{id:"_9-常用示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-常用示例"}},[t._v("#")]),t._v(" 9.常用示例")]),t._v(" "),a("p",[t._v("（1）执行浮点运算。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('echo "3.141592653 * 3" | bc\n9.424777959\n')])])]),a("p",[t._v("（2）指定计算结果的精度。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('echo "scale = 2; 3.0/8" | bc\n.37\n\n# 输出小数点前的 0\necho \'scale = 2; a = 3.0/8; if (length(a) == scale(a)) print 0; print a,"\\n"\' | bc\n0.37\n')])])]),a("p",[t._v("（3）进制转换。如将二进制转换为十进制。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('echo "obase=10;ibase=2;00001111" | bc\n15\n')])])]),a("p",[t._v("（4）幂运算。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('echo "9^2" | bc\n81\n')])])]),a("p",[t._v("（5）调用内置函数 sqrt() 计算平方根。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('echo "sqrt(16)" | bc\n4\n')])])]),a("p",[t._v("（6）交互式进行数学运算。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("bc\n9+9\n18\n9*9\n81\nsqrt(81)\n9\nquit\n")])])]),a("hr"),t._v(" "),a("h2",{attrs:{id:"参考文献"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://man7.org/linux/man-pages/man1/bc.1p.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bc(1p) - Linux manual page - man7.org"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.gnu.org/software/bc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("bc - GNU Project - Free Software Foundation"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/dengjin20104042056/article/details/101051619",target:"_blank",rel:"noopener noreferrer"}},[t._v("【Linux】一步一步学Linux——bc命令(233)"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);