(window.webpackJsonp=window.webpackJsonp||[]).push([[239],{512:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-命令简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-命令简介"}},[t._v("#")]),t._v(" 1.命令简介")]),t._v(" "),s("p",[t._v("vmstat（Virtual Memory Statistics）命令用于报告虚拟内存状态的统计信息。")]),t._v(" "),s("p",[t._v("vmstat 不仅可以监测虚拟内存，也可监测进程、物理内存、内存分页、磁盘和 CPU 等的活动信，是对系统的整体情况进行统计，不足之处是无法对某个进程进行深入分析。")]),t._v(" "),s("p",[t._v("vmstat 属系统管理员命令，属于 sysstat 软件包，RedHat 系的 Linux 可以用 yum install sysstat 直接安装。")]),t._v(" "),s("h2",{attrs:{id:"_2-命令格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令格式"}},[t._v("#")]),t._v(" 2.命令格式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("vmstat [OPTIONS] [DELAY [COUNT]]\n")])])]),s("p",[t._v("DELAY 表示报告之间的间隔（秒）。如果没有指定间隔，仅打印一条自系统启动以来的平均统计信息。")]),t._v(" "),s("p",[t._v("COUNT 表示报告的次数，如果指定了 DELAY，没有指定 COUNT，表示无限次报告。")]),t._v(" "),s("h2",{attrs:{id:"_3-选项说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-选项说明"}},[t._v("#")]),t._v(" 3.选项说明")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("-a, --active\n\t显示活跃和非活跃内存\n-f, --forks\n\t显示从系统启动至今的 fork 数量 。这包括 fork、vfork 和 clone 系统调用，并相当于创建的任务总数。每个进程由一个或多个任务表示，这取决于线程的使用情况\n-m, --slabs\n\t显示 slabinfo\n-n, --one-header\n\t只在开始时显示一次各字段名称\n-s, --stats\n\t显示各种事件计数器和内存统计信息的表\n-D, --disk-sum\n\t报告一些有关磁盘活动的汇总统计数据\n-d, --disk\n\t显示磁盘相关统计信息\n-p, --partition DEVICE\n\t显示指定磁盘分区统计信息\n-S, --unit CHAR\n\t使用指定单位显示。CHAR 可取值有 k（1000）、K（1024）、m（1000000） 、M（1048576）。默认单位为 K（1024 Bytes）\n-t, --timestamp\n\t将时间戳附加到每行\n-w, --wide\n\t宽输出模式，输出大于 80 个字符/行\n-h, --help\n\t显示帮助信息并退出\n-V, --version\n\t显示版本信息并退出\n")])])]),s("h2",{attrs:{id:"_4-常用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-常用示例"}},[t._v("#")]),t._v(" 4.常用示例")]),t._v(" "),s("p",[t._v("（1）显示系统各项统计信息。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("vmstat \nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\n 1  0      0 9120876 554900 5998224    0    0     0     6    1    2  0  0 100  0  0\n")])])]),s("p",[t._v("vmstat 命令执行结果共分为 6 部分：procs、memory、swap、io、system、cpu。")]),t._v(" "),s("p",[t._v("输出内容的含义如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("procs（进程）\nr(run)\n\t运行或等待 CPU 时间片的进程数。如果该值长期大于服务器 CPU 的个数，则说明 CPU 资源不足\nb(block)\n\t等待 I/O 的进程数量。该数值如果长时间大于 1，则表明系统 I/O 遇到瓶颈\n\nmemory（内存，单位 KB）\nswpd\n\t虚拟内存（swap 空间）已使用的大小\nfree\n\t空闲的物理内存的大小\nbuff\n\t用作缓冲的内存大小，一般存放待写入磁盘的数据\ncache\n\t用作缓存的内存大小，一般存放从磁盘中读取的数据\n\nswap（虚拟内存，单位 KB）\nsi\n\t每秒从交换区写到内存的大小\nso\n\t每秒写入交换区的内存大小\n\nio（单位 块/秒）\nbi\n\t每秒读取的块数（读磁盘）\nbo\n\t每秒写入的块数（写磁盘）\n\nsystem（系统）\nin\n\t每秒 CPU 的中断次数，包括时钟中断\ncs\n\t每秒上下文切换数，例如我们调用系统函数，就要进行上下文切换，线程的切换，也要进行上下文切换，这个值越小越好\n\ncpu（以百分比显示）\nus\n\t用户进程执行时间\nsy\n\t系统进程执行时间\nid\n\t空闲时间（包括 IO 等待时间）\nwa\n\t等待 IO 时间。wa 的值高时，说明 IO 等待比较严重，这可能由于磁盘大量做随机访问造成的，也有可能是磁盘出现瓶颈\nst\n\t被偷走的 CPU 时间\n")])])]),s("p",[t._v("（2）每隔 1s 报告 3 次系统各项统计信息。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("vmstat 1 3\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\n 1  0      0 9120312 554900 5999148    0    0     0     6    1    2  0  0 100  0  0\n 0  0      0 9120048 554900 5999148    0    0     0     0  836  785  0  0 100  0  0\n 1  0      0 9120064 554900 5999148    0    0     0    52  834  815  0  0 100  0  0\n")])])]),s("p",[t._v("（3）显示活跃和非活跃内存。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("vmstat -a\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   free  inact active   si   so    bi    bo   in   cs us sy id wa st\n 1  0      0 9124948 2119956 4194464    0    0     0     6    1    2  0  0 100  0  0\n")])])]),s("p",[t._v("使用 -a 选项显示活跃和非活跃内存时，所显示的内容除增加 inact 和 active 外，其他显示内容与不使用选项的 vmstat 输出的内容相同。")]),t._v(" "),s("p",[t._v("字段说明：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("inact：非活跃内存大小\nactive：活跃的内存大小\n")])])]),s("p",[t._v("（4）查看系统自启动以来已经 fork 了多少次。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("vmstat -f\n5245186 forks\n")])])]),s("p",[t._v("（5）显示内存相关统计信息及多种系统活动数量。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("     16165976 K total memory\n       491596 K used memory\n      4194836 K active memory\n      2119968 K inactive memory\n      9124404 K free memory\n       554900 K buffer memory\n      5995076 K swap cache\n            0 K total swap\n            0 K used swap\n            0 K free swap\n      1660593 non-nice user cpu ticks\n           26 nice user cpu ticks\n      1987770 system cpu ticks\n   1606632174 idle cpu ticks\n       148581 IO-wait cpu ticks\n            2 IRQ cpu ticks\n         9090 softirq cpu ticks\n            0 stolen cpu ticks\n      2376421 pages paged in\n     89871709 pages paged out\n            0 pages swapped in\n            0 pages swapped out\n   1698946367 interrupts\n   1672804654 CPU context switches\n   1580713782 boot time\n      5245774 forks\n")])])]),s("p",[t._v("这些信息的分别来自于 /proc/meminfo、/proc/stat 和 /proc/vmstat。")]),t._v(" "),s("p",[t._v("（6）查看磁盘的读写。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("vmstat -d\ndisk- ------------reads------------ ------------writes----------- -----IO------\n       total merged sectors      ms  total merged sectors      ms    cur    sec\nvda    77168  53491 3302309  349900 3094238 3196966 162673698 7600604\t0   1531\nvdb    34381    237 1428906  106216 257198 238871 17119528 3120952      0    117\n")])])]),s("p",[t._v("这些信息主要来自于 /proc/diskstats。")]),t._v(" "),s("p",[t._v("输出字段说明：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("disk 磁盘名\n\nreads\ntotal\n\t读取成功的数据总大小\nmerged\n\t合并的读请求数\nsectors\n\t成功读取的扇区数\nms\n\t读取所花费的毫秒数\n\nWrites\ntotal\n\t写入成功的数据总大小\nmerged\n\t合并的写请求数\nsectors\n\t成功写入的扇区数\nms\n\t写入所花费的毫秒数\n\nIO\ncur\n\t当前处于 I/O 等待的进程\ns\n\tI/O 花费的秒数\n")])])]),s("p",[t._v("（7）查看系统的 slab 信息。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Cache                       Num  Total   Size  Pages\nkmalloc-8192                108    128   8192      4\nkmalloc-4096                407    488   4096      8\nkmalloc-2048               1093   1168   2048     16\n...\n")])])]),s("p",[t._v("由于内核会有许多小对象，这些对象构造销毁十分频繁，比如 i-node，dentry，这些对象如果每次构建的时候就向内存要一个页（4KB），而其实只有几个字节，这样就会非常浪费，为了解决这个问题，就引入了一种新的机制来处理在同一个页中如何分配小存储区，而 slab 可以对小对象进行分配,这样就不用为每一个对象分配一个页，从而节省了空间。内核对一些小对象创建析构很频繁，slab 对这些小对象进行缓冲，可以重复利用，减少内存分配次数。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"参考文献"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://man7.org/linux/man-pages/man8/vmstat.8.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("vmstat(8) - Linux manual page - man7.org"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"http://sebastien.godard.pagesperso-orange.fr/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("sysstat 官网"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/peida/archive/2012/12/25/2833108.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("每天一个linux命令（46）：vmstat命令 - 博客园"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);