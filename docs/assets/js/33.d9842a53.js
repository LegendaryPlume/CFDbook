(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{368:function(a,s,t){"use strict";t.r(s);var e=t(12),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"_1-命令简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-命令简介"}},[a._v("#")]),a._v(" 1.命令简介")]),a._v(" "),s("p",[a._v("od（Octal Dump）以八进制或其他格式转储文件。")]),a._v(" "),s("p",[a._v("od 用于将指定文件内容以八进制、十进制、十六进制、浮点格式或 ASCII 编码字符方式显示，通常用于显示或查看文件中不能直接显示在终端的字符。od 默认显示方式是八进制。")]),a._v(" "),s("p",[a._v("常见的文件为文本文件和二进制文件。od 命令主要用来查看保存在二进制文件中的值，按照指定格式解释文件中的数据并输出，不管是 IEEE754 格式的浮点数还是 ASCII 码，od 命令都能按照需求输出它们的值。")]),a._v(" "),s("p",[a._v("大家也可以了解一下 hexdump 命令，以十六进制输出，但感觉 hexdump 没有 od 强大。")]),a._v(" "),s("h2",{attrs:{id:"_2-命令格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令格式"}},[a._v("#")]),a._v(" 2.命令格式")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("od [OPTION]... [FILE]...\n")])])]),s("h2",{attrs:{id:"_3-选项说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-选项说明"}},[a._v("#")]),a._v(" 3.选项说明")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-A, --address-radix=<RADIX>\n\t选择以何种基数表示地址偏移\n-j, --skip-bytes=<BYTES>\n\t跳过指定数目的字节\n-N, --read-bytes=<BYTES>\n\t输出指定字节数\n-S, --strings[=<BYTES>]\n\t输出长度不小于指定字节数的字符串，BYTES 缺省为 3\n-v, --output-duplicates\n\t输出时不省略重复的数据\n-w, --width[=<BYTES>]\n\t设置每行显示的字节数，BYTES 缺省为 32 字节\n-t, --format=<TYPE>\n\t指定输出格式，格式包括 a、c、d、f、o、u 和 x，各含义如下：\n  \ta：具名字符；比如换行符显示为 nl。\n  \tc：可打印字符或反斜杠表示的转义字符；比如换行符显示为 \\n。\n \td[SIZE]：SIZE 字节组成一个有符号十进制整数。SIZE 缺省为 sizeof(int)。\n \tf[SIZE]：SIZE 字节组成一个浮点数。SIZE 缺省为 sizeof(double)。\n  \to[SIZE]：SIZE 字节组成一个八进制整数。SIZE 缺省为 sizeof(int)。\n  \tu[SIZE]：SIZE 字节组成一个无符号十进制整数。SIZE 缺省为 sizeof(int)。\n  \tx[SIZE]：SIZE 字节组成一个十六进制整数。SIZE 缺省为 sizeof(int)。\n  \tSIZE 可以为数字，也可以为大写字母。如果 TYPE 是 [doux] 中的一个，那么 SIZE 可以为 C  = sizeof(char)，S = sizeof(short)，I = sizeof(int)，L = sizeof(long)。如果 TYPE 是 f，那么 SIZE 可以为 F = sizeof(float)，D = sizeof(double) ，L = sizeof(long double)。\n--help\n\t在线帮助\n--version\n\t显示版本信息\n")])])]),s("h2",{attrs:{id:"_4-常用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-常用示例"}},[a._v("#")]),a._v(" 4.常用示例")]),a._v(" "),s("p",[a._v("（1）设置第一列偏移地址以十进制显示。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("od "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Ad")]),a._v(" testfile\n")])])]),s("p",[a._v("偏移地址显示基数有：d for decimal, o for octal, x for hexadecimal or n for none。")]),a._v(" "),s("p",[a._v("（2）od 不显示第一列偏移地址。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("od "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-An")]),a._v(" testfile\n")])])]),s("p",[a._v("（3）以十六进制输出，默认以四字节为一组（一列）显示。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("od "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tx")]),a._v(" testfile\n")])])]),s("p",[a._v("（4）以十六进制输出，每列输出一字节。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("od "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tx1")]),a._v(" testfile\n")])])]),s("p",[a._v("（5）显示ASCII字符和ASCII字符名称，注意换行符显示方式的区别。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示ASCII字符")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" lvlv "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" od "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n0000000   l   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("v")]),a._v("   l   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("v")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nl")]),a._v("\n0000005\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示ASCII字符名称")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" lvlv "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" od "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tc")]),a._v("\n0000000   l   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("v")]),a._v("   l   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("v")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("n\n0000005\n")])])]),s("p",[a._v("（6）以十六进制显示的同时显示原字符。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" lvlv"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("od "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tcx1")]),a._v("\n0000000   l   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("v")]),a._v("   l   "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("v")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("n\n         6c  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("76")]),a._v("  6c  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("76")]),a._v("  0a\n0000005\n")])])]),s("p",[a._v("（7）指定每行显示512字节。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("od "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w512")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tx1")]),a._v(" testfile\n")])])]),s("p",[a._v("（8）od 命令输出时去除列与列之间的空格符。")]),a._v(" "),s("p",[a._v("当我们需要将文件内容显示为十六进制，需要输出连续的单个字节，每个字节以十六进制显示。这时我们可以通过od命令将文件以单个字节为一组，十六进制输出在同一行，并去除每个字节之间的空格。目前还不知道怎么通过指定od命令的相关选项去除列与列之间的空格，也许od命令本身并不支持。我的做法是：")]),a._v(" "),s("ul",[s("li",[a._v("使用 -An 不输出偏移地址。")]),a._v(" "),s("li",[a._v("使用 -v 输出时不省略重复的数据。")]),a._v(" "),s("li",[a._v("使用 -tx1 以单个字节为一组按照十六进制输出，-w1 每列输出一个字节。")]),a._v(" "),s("li",[a._v("最后通过管道传递给 awk 的标准输入，通过 awk 不换行输出所有行，拼接为一行输出。")])]),a._v(" "),s("p",[a._v("具体命令如下：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("od "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-An")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tx1")]),a._v(" testfile "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{for(i=1;i<=NF;++i){printf \"%s\",$i}}'")]),a._v("\n")])])]),s("hr"),a._v(" "),s("h2",{attrs:{id:"参考文献"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[a._v("#")]),a._v(" 参考文献")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://man7.org/linux/man-pages/man1/od.1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("od(1) - Linux manual page - man7.org"),s("OutboundLink")],1)]),a._v(" "),s("Vssue",{attrs:{title:"od"}})],1)}),[],!1,null,null,null);s.default=n.exports}}]);