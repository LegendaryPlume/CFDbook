(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{552:function(t,n,a){"use strict";a.r(n);var e=a(12),s=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"_1-命令简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-命令简介"}},[t._v("#")]),t._v(" 1.命令简介")]),t._v(" "),n("p",[t._v("ping（Packet Internet Groper）命令是因特网包探索器，用于测试网络连通性，是常用的网络命令之一。")]),t._v(" "),n("p",[t._v("ping 命令用于向指定的网络主机发送 IMCP 响应请求报文（ECHO-REQUEST），多数网络设备收到该报文后会回应 ICMP 响应应答报文（ECHO-REPLY），以此来验证网络连接是否正常。")]),t._v(" "),n("p",[n("strong",[t._v("注意：")]),t._v(" Linux 系统下的 ping 命令与 Windows 系统下的 ping 命令稍有不同。Windows 下运行 ping 命令一般会发出 4 个请求就结束运行该命令；而 Linux 下不会自动终止，此时需要我们按 Ctrl+C 终止或者使用 -c 参数为 ping 命令指定发送的请求数目。")]),t._v(" "),n("h2",{attrs:{id:"_2-命令格式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令格式"}},[t._v("#")]),t._v(" 2.命令格式")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ping\nping [OPTIONS] DESTINATION\n")])])]),n("p",[t._v("不跟参数单独执行 ping 命令将显示简短用法。其中参数为零到多个，目标主机可以是主机 IP 或者域名。")]),t._v(" "),n("h2",{attrs:{id:"_3-选项说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-选项说明"}},[t._v("#")]),t._v(" 3.选项说明")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("-4\n\t只使用 IPv4\n-6\n\t只使用 IPv6\n-A\n\t探测包发送间隔自适应往返时间，这样网络中存在的未应答的探测请求一般不会超过一个\n-a\n　　每次发送数据时发出鸣响（Audible）\n-B\n\t不允许 ping 改变包头的源地址\n-b\n\t允许 ping 一个广播地址\n-c COUNT\n　　发送 count 个 ECHO_REQUEST 数据包后结束 ping 程序\n-D\n\t在每行前打印时间戳\n-d\n　　使用 socket 的 SO_DEBUG 选项。实际上，Linux 内核不使用这个套接字选项\n-F FLOW_LABEL\n\t仅 IPv6 有效。为请求包分配一个 20 比特的 flow label。如果 FLOW_LABEL 为 0，内核会随机分配\n-f\n　　采用洪泛模式大量且快速地向目标发送数据包。如果发送间隔没有设置，则默认设置为 0，并按照报文接受的速度和一百次每秒的速度来发送报文（以最快的为准）。只有超级用户能够将此选项和 -i 0 选项一起使用\n-h\n\t显示帮助信息\n-I INTERFACE\n　　使用指定的网络接口地址发送数据包\n-i INTERVAL\n　　每隔 INTERVAL 秒发送一次数据包，默认一秒 ping 一次。只有超级用户可以将间隔设置为小于0.2 秒的值\n-L\n\t抑制组播报文回送，只适用于 ping 的目标为一个组播地址\n-l PRELOAD\n\t在没有接受到回复报文之前能发送的最多报文。非超级用户最多只能设置为 3\n-M PMTUDISC_OPT\n\t选择 Path MTU Discovery 策略模式。PMTUDISC_OPT 取值可以为 do（不允许分段，甚至不允许在本地分段）、want（找出 PMTU，在如果包太大就在本地分段） 或 dont（不要设置 IP 包首部中的 DF 位，即允许分段）\n-m MARK\n\t使用标记来标记发送的数据包\n-n\n　　只输出主机 IP 地址，不通过查询 DNS 获知 IP 地址对应的主机名，以节省时间\n-O\n\t在发送下一个数据包之前报告未完成的 ICMP Echo 请求\n-p PATTERN\n　　最多指定 16 个字节去填充发送的数据包，这对于诊断网络中数据依赖问题很有用。例如，-p ff 会将所有的填充数据设置为 1\n-Q TOS\n \t用来设置服务质量（Quality of Service ）。ICMP 协议有一个 8 bits 的区分服务（Differentiated Services）。低两位用于分离数据，高 6 位表示区分服务，一般有最小时延、最大吞吐量、最高可靠性、最小代价\n-q\n　　静态输出。仅程序启动和结束时显示摘要行\n-R\n　　记录路由过程\n-r\n　　忽略正常的路由表，而直接向主机发送数据包。如果目标主机不再直连的网络上，则返回异常\n-S SNDBUF\n\t\t设置套接字的发送缓冲区大小。如果没有设置，则被设定为不超过一个报文长度\n-s PACKETSIZE\n　　指定要发送的数据的字节数。默认是 56 字节，与 8 字节的 ICMP 头部结合刚好是 64 字节的 ICMP 数据包\n-T TIMESTAMP_OPTION\n\t设置 IP 报文的时间戳选项。选项可以是以下三种：\n\t（1）-T tsonly 只记录时间戳；\n\t（2）-T tsandaddr 收集时间戳和 IP 地址；\n\t（3）-T tsprespec [host1 [host2 [host3[host4]]]] 收集来自预定的网络地址的时间戳\n-t TTL\n　　设置 IP 包的 TTL 值\n-U\n\t打印完整的用户对用户延迟\n-V\n\t显示版本信息并退出\n-v\n　　详细模式输出\n-W TIMEOUT\n　　设置等待 ICMP 响应的超时时间，单位秒\n-w DEADLINE\n　　ping 程序在 DEADLINE 秒后退出，不管发送或接收多少数据包\n")])])]),n("h2",{attrs:{id:"_4-常用示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-常用示例"}},[t._v("#")]),t._v(" 4.常用示例")]),t._v(" "),n("p",[t._v("（1）显示 ping 的简要用法。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ping\nUsage: ping [-aAbBdDfhLnOqrRUvV] [-c count] [-i interval] [-I interface]\n            [-m mark] [-M pmtudisc_option] [-l preload] [-p pattern] [-Q tos]\n            [-s packetsize] [-S sndbuf] [-t ttl] [-T timestamp_option]\n            [-w deadline] [-W timeout] [hop1 ...] destination\n")])])]),n("p",[t._v("（2）测试能否 ping 通 IP。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ping 9.134.114.170\nPING 9.134.114.170 (9.134.114.170) 56(84) bytes of data.\n64 bytes from 9.134.114.170: icmp_seq=1 ttl=64 time=0.033 ms\n64 bytes from 9.134.114.170: icmp_seq=2 ttl=64 time=0.040 ms\n...\n")])])]),n("p",[t._v("回包正常，表示网络链路通畅。")]),t._v(" "),n("p",[t._v("（3）测试能否 ping 通域名。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ping baidu.com\nPING baidu.com (220.181.38.148) 56(84) bytes of data.\n64 bytes from 220.181.38.148: icmp_seq=1 ttl=249 time=39.4 ms\n64 bytes from 220.181.38.148: icmp_seq=2 ttl=249 time=39.3 ms\n...\n")])])]),n("p",[t._v("回包正常，表示网络链路通畅。")]),t._v(" "),n("p",[t._v("（4）每隔 0.5 秒 ping 一次，一共 ping 3 次。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ping -i 0.5 -c 3 baidu.com\nPING baidu.com (220.181.38.148) 56(84) bytes of data.\n64 bytes from 220.181.38.148: icmp_seq=1 ttl=249 time=39.3 ms\n64 bytes from 220.181.38.148: icmp_seq=2 ttl=249 time=39.3 ms\n64 bytes from 220.181.38.148: icmp_seq=3 ttl=249 time=39.3 ms\n\n--- baidu.com ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 1001ms\nrtt min/avg/max/mdev = 39.375/39.390/39.399/0.010 ms\n")])])]),n("p",[t._v("下面简单地介绍一下 ping 产生的响应内容的含义：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("PING baidu.com (220.181.38.148) 56(84) bytes of data.\n\t表示 ping 目标主机的域名和 IP，以及不带包头的包大小和带包头的包大小，参考 -s 选项\n\n64 bytes from 220.181.38.148: icmp_seq=1 ttl=249 time=39.3 ms\n64 bytes from 220.181.38.148: icmp_seq=2 ttl=249 time=39.3 ms\n64 bytes from 220.181.38.148: icmp_seq=3 ttl=249 time=39.3 ms\n\ticmp_seq：ping 序列，从 1 开始；如果数字不是按顺序递增也就意味着丢包了\n\tttl：剩余的 ttl；见下文的 TTL 解释\n\ttime: 响应时间，数值越小，通信速度越快\n\n3 packets transmitted, 3 received, 0% packet loss, time 1001ms\n\t发出去的包数，返回的包数，丢包率，总耗费时间\n\nrtt min/avg/max/mdev = 39.375/39.390/39.399/0.010 ms\n\t最小/最大/平均响应时间和本机硬件耗费时间\n")])])]),n("p",[t._v("（5）综合实例，每隔 0.5 秒 ping 一次，一共 ping 3 次，并且设置发送包的大小为 1024 和 TTL 值为 255。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ping -i 0.5 -c 3 -s 1024 -t 255 baidu.com\nPING baidu.com (39.156.69.79) 1024(1052) bytes of data.\n1032 bytes from 39.156.69.79: icmp_seq=1 ttl=249 time=44.8 ms\n1032 bytes from 39.156.69.79: icmp_seq=2 ttl=249 time=40.5 ms\n1032 bytes from 39.156.69.79: icmp_seq=3 ttl=249 time=40.4 ms\n\n--- baidu.com ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 1001ms\nrtt min/avg/max/mdev = 40.441/41.927/44.810/2.045 ms\n")])])]),n("p",[t._v("（6）综合实例，使用 -i 指定发送数据包时间间隔，-c 指定一共发送多少个数据包，-I 指定源地址，-q 直接显示程序的启动和最后结果。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ping -i 0.2 -c 3 -I 9.134.114.170 baidu.com -q\nPING baidu.com (39.156.69.79) from 9.134.114.170 : 56(84) bytes of data.\n\n--- baidu.com ping statistics ---\n3 packets transmitted, 3 received, 0% packet loss, time 400ms\nrtt min/avg/max/mdev = 40.476/40.541/40.588/0.171 ms\n")])])]),n("p",[t._v("（7）以最快的速度，使用最大的包进行 ping，可用于测试目标主机的承压能力。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ping -f -s 65507 baidu.com\n")])])]),n("p",[t._v("注意：此用法非常危险，65535（包头+内容）*100个包每秒=6.25MB，每秒发送 6.25MB 的数据，相当于 50Mbps 的带宽，完全可能导致目标主机拒绝服务，请谨慎使用。")]),t._v(" "),n("p",[t._v("（8）ping 不通的情况。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ping -c 3 9.9.9.9\nPING 9.9.9.9 (9.9.9.9) 56(84) bytes of data.\n\n--- 9.9.9.9 ping statistics ---\n3 packets transmitted, 0 received, 100% packet loss, time 1999ms\n")])])]),n("p",[t._v("ping 不通目标主机的常见原因有：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("No Answer：原因可能是，对方主机没工作，双方网络配置不正确，路由问题等\nRequest Time Out：对方主机已关机，路由问题或对端防火墙设置禁止ping\nUnknown Host Name：DNS设置问题，或者对方主机不存在\nDestination Net Unreachable：双方没有建立连接，或对方主机不存在\nBad IP Address：IP 地址不存在或 IP 不能被 DNS 服务器解析\ntransmit failed，error code：网卡驱动问题\nno rout to host：网卡工作不正常\nPing 127.0.0.1 如果ping不通，表明本地机 TCP/IP 协议不能正常工作\n")])])]),n("h2",{attrs:{id:"_5-拓展知识"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-拓展知识"}},[t._v("#")]),t._v(" 5.拓展知识")]),t._v(" "),n("h3",{attrs:{id:"_5-1-ttl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-ttl"}},[t._v("#")]),t._v(" 5.1 TTL")]),t._v(" "),n("p",[t._v("当我们在使用 ping 命令时，返回结果里会带一个 TTL 值。这个东西的含义其实就是Time To Live，指的是报文在网络中能够存活的限制。以前这个限制方式是设定一个时间（Time To Live中的Time就是这样来的），当报文在网络中转发时，时间超过这个限制，最后一个收到报文的‘路由点’就会把它扔掉，而不继续转发。后来把时间限制改为了跳数限制，就是当报文在网络中转发时，每经过一个‘路由点‘，就把预先设定的这个TTL数值减 1，直到最后 TTL=1 时报文就被扔掉，不向下转发。")]),t._v(" "),n("p",[t._v("路由点：我这里是指完成路由功能的机器，因为并不是只有路由器才可以完成路由转发功能，比如主机可以配置路由转发。")]),t._v(" "),n("p",[t._v("所以，回包中的 TTL 表示目标主机返回的报文到达本机后，从它预设的 TTL 值减小到现在的值。")]),t._v(" "),n("h3",{attrs:{id:"_5-2-开启和禁用-ping-响应"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-开启和禁用-ping-响应"}},[t._v("#")]),t._v(" 5.2 开启和禁用 ping 响应")]),t._v(" "),n("p",[t._v("有时为了保护主机，很多时候我们需要禁止 ICMP 协议，在这种情况下，终端再使用ping命令检测，服务器不会再做出任何响应。")]),t._v(" "),n("p",[t._v("（1）临时开启 ping。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_all\n")])])]),n("p",[t._v("（2）临时禁用 ping。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all \n")])])]),n("p",[t._v("（3）永久禁用 ping。在配置文件 /etc/sysctl.conf 中增加如下一行。修改完成后执行sysctl -p使新配置生效")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("net.ipv4.icmp_echo_ignore_all=1          # 1 表示禁止\n")])])]),n("p",[t._v("（4）永久开启 ping。在配置文件 /etc/sysctl.conf 中增加如下一行。修改完成后执行 sysctl -p 使新配置生效。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("net.ipv4.icmp_echo_ignore_all=0          # 0 表示允许\n")])])]),n("hr"),t._v(" "),n("h2",{attrs:{id:"参考文献"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://www.man7.org/linux/man-pages/man8/ping.8.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ping(8)  - Linux manual page - man7.org"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/u011857683/article/details/83662550",target:"_blank",rel:"noopener noreferrer"}},[t._v("ping命令详解 - CSDN"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/dengjin20104042056/article/details/99709270",target:"_blank",rel:"noopener noreferrer"}},[t._v("【Linux】一步一步学Linux——ping命令(150) - CSDN"),n("OutboundLink")],1)]),t._v(" "),n("Vssue",{attrs:{title:"ping"}})],1)}),[],!1,null,null,null);n.default=s.exports}}]);