(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{556:function(s,t,a){"use strict";a.r(t);var e=a(12),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-命令简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-命令简介"}},[s._v("#")]),s._v(" 1.命令简介")]),s._v(" "),t("p",[s._v("ss（Socket Statistics）另一个用于研究套接字的实用程序。")]),s._v(" "),t("p",[s._v("ss 命令用来显示处于活动状态的套接字信息。ss 命令可以用来获取 socket 统计信息，它可以显示和 netstat 类似的内容。但ss的优势在于它能够显示更多更详细的有关 TCP 和连接状态的信息，而且比 netstat 更快速更高效。")]),s._v(" "),t("p",[s._v("当服务器的 socket 连接数量变得非常大时，无论是使用 netstat 命令还是直接"),t("code",[s._v("cat /proc/net/tcp")]),s._v("，执行速度都会很慢。可能你不会有切身的感受，但请相信我，当服务器维持的连接达到上万个的时候，使用 netstat 等于浪费生命，而用 ss 却能节省时间。")]),s._v(" "),t("p",[s._v("天下武功唯快不破。ss 快的秘诀在于，它利用到了 TCP 协议栈中 tcp_diag。tcp_diag 是一个用于分析统计的模块，可以获得 Linux 内核中第一手的信息，这就确保了 ss 的快捷高效。当然，如果你的系统中没有 tcp_diag，ss 也可以正常运行，只是效率会变得稍慢。")]),s._v(" "),t("h2",{attrs:{id:"_2-命令格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令格式"}},[s._v("#")]),s._v(" 2.命令格式")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" FILTER "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("p",[s._v("其中 FILTER 为过滤器，取值为")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("FILTER := [ state STATE-FILTER ] [ EXPRESSION ]\n")])])]),t("h2",{attrs:{id:"_3-选项说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-选项说明"}},[s._v("#")]),s._v(" 3.选项说明")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("-h, --help\n\t帮助信息。\n-V, --version\n\t程序版本信息。\n-n, --numeric\n\t不解析服务名称。\n-r, --resolve\n\t解析主机名。\n-a, --all\n\t显示所有套接字，即显示侦听和非侦听（对于 TCP，这意味着已建立连接）套接字。\n-l, --listening\n\t显示监听状态的套接字。\n-o, --options\n\t显示计时器信息。对于TCP协议，输出格式为：timer:(<timer_name>,<expire_time>,<retrans>)。\n\t<timer_name> 为计时器的名称，有五种计时器名称：\n\t\ton：表示这些计时器之一：TCP 重新训练计时器，TCP早期重新训练计时器和尾部丢失探测计时器\n\t\tkeepalive：tcp保持活动计时器\n\t\ttimewait：timewait 阶段计时器\n\t\tpersist：零窗口探测计时器\n\t\tunknown：没有上述计时器\n\t <expire_time> 为计时器过期多时间。\n\t <retrans> 重传发生了多少次。\n-e, --extended\n\t显示详细的套接字信息。\n-m, --memory\n\t显示套接字的内存使用情况。\n-p, --processes\n\t显示使用套接字的进程。\n-i, --info\n\t显示 TCP 内部信息。\n-s, --summary\n\t显示套接字使用概况。\n-4, --ipv4\n\t仅显示 IPv4 的套接字。\n-6, --ipv6\n\t仅显示 IPv6 的套接字。\n-0, --packet\n\t显示 PACKET 套接字。\n-t, --tcp\n\t仅显示 TCP 套接字。\n-u, --udp\n\t仅显示 UCP 套接字。\n-d, --dccp\n\t仅显示 DCCP 套接字。\n-w, --raw\n\t仅显示 RAW 套接字。\n-x, --unix\n\t仅显示 Unix 套接字。\n-f, --family=FAMILY\n\t显示 FAMILY 类型的套接字，FAMILY 可选，支持  unix, inet, inet6, link, netlink。\n-A, --query=QUERY, --socket=QUERY\n      QUERY := {all | inet | tcp | udp | raw | unix | packet | netlink}[,QUERY]\n-D, --diag=FILE\n\t将原始 TCP 套接字信息转储到文件。\n-F, --filter=FILE\n\t从文件中都去过滤器信息FILTER := [ state TCP-STATE ] [ EXPRESSION ]\n")])])]),t("h2",{attrs:{id:"_4-常用示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-常用示例"}},[s._v("#")]),s._v(" 4.常用示例")]),s._v(" "),t("p",[s._v("（1）显示所有 TCP 连接。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\nState      Recv-Q Send-Q         Local Address:Port                          Peer Address:Port                \nLISTEN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v("                        *:10662                                    *:*                    \nLISTEN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v("                        *:ssh                                      *:*                    \nLISTEN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v("                        *:ddi-tcp-1                                *:*                    \nESTAB      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.3:40616                        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("169.254")]),s._v(".0.138:8186                 \nESTAB      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.3:36274                         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("169.254")]),s._v(".0.55:lsi-bobcat           \nESTAB      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("52")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.3:ssh                         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("107.150")]),s._v(".189.50:56566  \n")])])]),t("p",[s._v("（2）显示套接字使用概况。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v("\nTotal: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1644")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("kernel "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2523")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nTCP:   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("estab "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", closed "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", orphaned "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(", synrecv "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(", timewait "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("/0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", ports "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\nTransport Total     IP        IPv6\n*         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2523")]),s._v("      -         -        \nRAW       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("        \nUDP       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("        \nTCP       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("        \nINET      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("        \nFRAG      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       \n")])])]),t("p",[s._v("（3）显示监听状态的套接字。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\nNetid  State      Recv-Q Send-Q   Local Address:Port                    Peer Address:Port                \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v("     UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                 rtnl:kernel                              *                     \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v("     UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                 rtnl:ntpd/657                            *                     \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v("     UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                 rtnl:ntpd/657                            *                     \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v("     UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4352")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("              tcpdiag:ss/28913                            *                     \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v("     UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("768")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("              tcpdiag:kernel                              *                     \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v("     UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                 xfrm:kernel                              *                     \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".           \n")])])]),t("p",[s._v("（4）显示 LISTEN 状态的进程信息。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-lp")]),s._v("\nNetid  State      Recv-Q Send-Q Local Address:Port                 Peer Address:Port                \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v("     UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      rtnl:evolution-addre/3016   *                     \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v("     UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      rtnl:packagekitd/1658       *                     \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v("     UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      rtnl:1334                   *                     \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v("     UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      rtnl:avahi-daemon/630       *\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("p",[s._v("（5）查看指定端口的信息。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-lp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10662")]),s._v("\nudp    UNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       *:10662                 *:*                     users:"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v('"ss'),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v('server"'),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pid"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1019")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("fd"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\ntcp    LISTEN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v("     *:10662                 *:*                     users:"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v('"ss'),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v('server"'),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pid"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1019")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("fd"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n")])])]),t("p",[s._v("（6）查看所有 UDP 套接字。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\nState      Recv-Q Send-Q         Local Address:Port                          Peer Address:Port                \nUNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                          *:bootpc                                   *:*                    \nUNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.3:ntp                                      *:*                    \nUNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:ntp                                      *:*                    \nUNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                          *:ntp                                      *:*                    \nUNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                          *:10662                                    *:*                    \nUNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("fe80::5054:ff:fe31:f1f2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("%eth0:ntp                          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("::"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":*                    \nUNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("::1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":ntp                                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("::"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":*                    \nUNCONN     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("::"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":ntp                                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("::"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":*               \n")])])]),t("p",[s._v("（7）显示所有状态为 established 的 SMTP 连接。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" state established "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'( dport = :smtp or sport = :smtp )'")]),s._v("\nNetid  Recv-Q Send-Q           Local Address:Port                            Peer Address:Port\n")])])]),t("p",[s._v("（8）显示所有状态为 Established 的 HTTP 连接。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" state established "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'( dport = :http or sport = :http )'")]),s._v(" \nNetid  Recv-Q Send-Q           Local Address:Port                            Peer Address:Port\n")])])]),t("p",[s._v("（9）列举出处于 FIN-WAIT-1 状态的源端口为 80 或者 443，目标网络为 193.233.7/24 所有 TCP 套接字。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" state fin-wait-1 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'( sport = :http or sport = :https )'")]),s._v(" dst "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("193.233")]),s._v(".7/24\nNetid  Recv-Q Send-Q Local Address:Port                 Peer Address:Port\n")])])]),t("p",[s._v("（10）查询关闭状态的套接字。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-4")]),s._v(" state closing\nNetid  Recv-Q Send-Q           Local Address:Port                            Peer Address:Port\n")])])]),t("p",[s._v("状态可以是如下：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("established\nsyn-sent\nsyn-recv\nfin-wait-1\nfin-wait-2\ntime-wait\nclosed\nclose-wait\nlast-ack\nlisten\nclosing\n")])])]),t("p",[s._v("（11）匹配目的 IP 和端口。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss dst "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".12.94\nNetid  State      Recv-Q Send-Q Local Address:Port                 Peer Address:Port\n\nss dst "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".12.94:http\nNetid  State      Recv-Q Send-Q Local Address:Port                 Peer Address:Port\n\nss dst "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".12.94:1521\nNetid  State      Recv-Q Send-Q Local Address:Port                 Peer Address:Port\n")])])]),t("p",[s._v("（12）匹配本地 IP 和端口。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss src "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".12.94\nNetid  State      Recv-Q Send-Q Local Address:Port                 Peer Address:Port                \ntcp    ESTAB      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".12.94:ssh                  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".12.87:52486 \n\nss src "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".12.94:http\nNetid  State      Recv-Q Send-Q Local Address:Port                 Peer Address:Port\n\nss src "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".12.94:1521\nNetid  State      Recv-Q Send-Q Local Address:Port                 Peer Address:Port\n")])])]),t("p",[s._v("（13）端口比较。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss  sport "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" :http \nss  dport "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" :http \nss  dport "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" :1024 \nss  sport "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" :1024 \nss sport "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" :32000 \nss  sport eq :22 \nss  dport "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" :22 \nss  state connected sport "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" :http \nss "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" sport "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" :http or sport "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" :https "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \nss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" state fin-wait-1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" sport "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" :http or sport "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" :https "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" dst "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1/24\n")])])]),t("p",[s._v("格式为：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss dport OP PORT \nss sport OP PORT\n")])])]),t("p",[s._v("ss dport OP PORT 远程端口和一个数比较；ss sport OP PORT 本地端口和一个数比较。")]),s._v(" "),t("p",[s._v("OP 可以代表以下任意一个：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("<= or le : 小于或等于端口号\n>= or ge : 大于或等于端口号\n== or eq : 等于端口号\n!= or ne : 不等于端口号\n< or gt : 小于端口号\n> or lt : 大于端口号\n")])])]),t("p",[s._v("（14）ss 和 netstat 效率比较。")]),s._v(" "),t("p",[s._v("用 time 命令分别获取通过 netstat 和 ss 命令获取程序和概要占用资源所使用的时间。在服务器连接数比较多的时候，netstat 的效率完全没法和 ss 比。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" ss\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nreal    0m0.020s\nuser    0m0.005s\nsys     0m0.005s\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-at")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nreal    0m10.266s\nuser    0m0.015s\nsys     0m0.032s\n")])])]),t("p",[s._v("（15）显示连接 X 服务器的进程。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ss "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-x")]),s._v(" src /tmp/.X11-unix/X0\nNetid  State      Recv-Q Send-Q      Local Address:Port                       Peer Address:Port\n")])])]),t("hr"),s._v(" "),t("h2",{attrs:{id:"参考文献"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[s._v("#")]),s._v(" 参考文献")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://man7.org/linux/man-pages/man8/ss.8.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("ss(8) - Linux manual page - man7.org"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://tools.ietf.org/rfc/rfc793.txt",target:"_blank",rel:"noopener noreferrer"}},[s._v("RFC 793"),t("OutboundLink")],1)]),s._v(" "),t("Vssue",{attrs:{title:"ss"}})],1)}),[],!1,null,null,null);t.default=n.exports}}]);