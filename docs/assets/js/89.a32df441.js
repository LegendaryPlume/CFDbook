(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{421:function(a,t,s){"use strict";s.r(t);var e=s(12),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"_1-命令简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-命令简介"}},[a._v("#")]),a._v(" 1.命令简介")]),a._v(" "),t("p",[a._v("find 用于在指定目录查找文件。")]),a._v(" "),t("p",[a._v("find 可以指定一些匹配条件，如按文件名、文件类型、文件属主甚至是时间戳来查找文件，默认递归查找。")]),a._v(" "),t("h2",{attrs:{id:"_2-命令格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令格式"}},[a._v("#")]),a._v(" 2.命令格式")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("find [-H] [-L] [-P] [-D DEBUGOPTS] [-O LEVEL] [PATH...] [EXPRESSION]\n")])])]),t("p",[a._v("基本选项"),t("code",[a._v("-H")]),a._v("、"),t("code",[a._v("-L")]),a._v("、和"),t("code",[a._v("-P")]),a._v("控制着对符号链接的处理方式。")]),a._v(" "),t("p",[a._v("如果没有给定搜索路径 PATH，则默认为当前目录。")]),a._v(" "),t("p",[a._v("如果没有给定表达式 EXPRESSION，默认为"),t("code",[a._v("-print")]),a._v("，将匹配的文件输出到标准输出。")]),a._v(" "),t("p",[a._v("其实"),t("code",[a._v("-H -L -P -D -O")]),a._v("这几个选项并不常用，EXPRESSION 可以拆解为 options/tests/actions，将在第四节详细介绍。")]),a._v(" "),t("h2",{attrs:{id:"_3-选项说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-选项说明"}},[a._v("#")]),a._v(" 3.选项说明")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('-P\n\t永远不跟随符号链接。这是默认行为。当发现待查询的文件是一个符号链接，使用的信息应采取的符号链接本身的性质\n-L\n\t跟随符号链接，当发现检验或打印信息的文件是一个符号链接，使用的信息应采取的符号链接对应的文件。使用此选项意味着-noleaf，当后面使用-P时，-noleaf仍然有效；\n-H\n\t不跟随符号链接，除了在处理命令行参数。当发现检验或打印文件有关的信息，这些信息必须是符号链接本身的性质，唯一例外是指定的命令行参数是一个文件符号链接，则使用链接的文件。当-H生效时，命令行的参数有一个指向目录的符号链接，该目录内容将被检查，当然选项`-maxdepth 0`将会阻止这个操作；\n-D DEBUGOPTIONS\n\t使 find 打印诊断信息，使用时debug选项使用逗号分隔，可以使用"find -D help"查看完整有效的debug选项，有效的有：\n\thelp：解释debug选项；\n\ttree：以原始优化的方式显示表达式树；\n\tstat：打印文件使用stat和lstat命令显示的信息；\n\topt：打印与表达式树优化有关的诊断信息；\n\trates：打印动作执行成功和失败次数的总体信息；\n-O LEVEL\n\t启动查询优化，对执行动作重新排序来加速整体效果，优化等级有 0、1、2、3 四个级别。\n')])])]),t("p",[a._v("注意：如果 -P、-L、-H 同时指定，以最后一个为准。")]),a._v(" "),t("h2",{attrs:{id:"_4-命令表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-命令表达式"}},[a._v("#")]),a._v(" 4.命令表达式")]),a._v(" "),t("p",[a._v("find 命令表达式可以分为三类：")]),a._v(" "),t("ul",[t("li",[a._v("普通选项（options），在其它表达式前指定，设置搜索路径的深度、查看帮助、版本信息等。")]),a._v(" "),t("li",[a._v("比较测试（tests），给定查找条件。")]),a._v(" "),t("li",[a._v("动作（actions），对查找到的文件，执行指定操作。")])]),a._v(" "),t("p",[a._v("对于多个表达式，find 从左向右处理，所以表达式的前后顺序不同会有不同的搜索性能。")]),a._v(" "),t("p",[a._v("find 首先对整个命令行进行语法解析，并应用给定的 options，然后定位到搜索路径下开始对路径下的文件或子目录进行表达式评估或测试（test）。评估或测试的过程是按照表达式的顺序从左向右进行（此处不考虑操作符的影响），如果最终表达式评估结果为true，则输出该文件全路径名。")]),a._v(" "),t("p",[a._v("对于 find 来说，一个非常重要的概念：find 的搜索机制根据表达式返回的 true/false 决定，每搜索一次都判断一次是否能确定最终评估结果为 true，只有评估的最终结果为 true 才算找到，并切入到下一个搜索点。")]),a._v(" "),t("h3",{attrs:{id:"_4-1-表达式操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-表达式操作符"}},[a._v("#")]),a._v(" 4.1 表达式操作符")]),a._v(" "),t("p",[a._v("操作符控制表达式运算方式。确切地说，是控制 expression 中的 options/tests/actions 的运算方式。")]),a._v(" "),t("p",[a._v("无论是 options、tests 还是 actions，它们都可以给定多个。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /tmp "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-maxdepth")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mindepth")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.log"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{}'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print")]),a._v("\n")])])]),t("p",[a._v("该 find 中给定了两个 option（"),t("code",[a._v("-maxdepth 3 -mindepth 1")]),a._v("），两个 test（"),t("code",[a._v('-type f -name "*.log"')]),a._v("），两个 action（"),t("code",[a._v("-exec ls '{}' \\; -print")]),a._v("），它们之间从前向后按顺序进行评估，所以如果想要改变运算逻辑，需要使用操作符来控制。")]),a._v(" "),t("p",[a._v("注意，理解 and 和 or 的评估方式非常重要，写在 and 或 or 后面的表达式很可能不起作用，而导致跟预期结果不一样。")]),a._v(" "),t("p",[a._v("下面的操作符优先级从高到低。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('( expr )         ：优先级最高。为防止括号被shell解释(进入子shell)，所以需要转义，即\\(...\\)。\n! expr           ：对expr的true和false结果取反。同样需要使用引号包围。\n-not expr        ：等价于"! expr"。\nexpr1 expr2      ：等同于and操作符。\nexpr1 -a expr2   ：等同于and操作符。\nexpr1 -and expr2 ：首先要求expr1为true，然后expr2以expr1搜索的结果为基础继续检测，然后再返回检测值为true的文件。因为expr2是以expr1结果为基础的，所以如果expr1返回false，则expr2直接被忽略而不会进行任何操作。\nexpr1 -o expr2   ：等同于or操作符。\nexpr1 -or expr2  ：expr1返回true或false都不影响expr2的检测，它们是独立的。如果expr1返回true，则独立输出该结果，然后开始评测expr2。所以既返回expr1为ture的，也返回expr2为true的文件，但两者同名的文件只返回一次。\nexpr1 , expr2    ：逗号操作符表示列表的意思，expr1和expr2都会被评估，但expr1的true或false是被无视的，只有expr2的结果才是最终状态值。\n')])])]),t("p",[a._v("关于 and 和 or 操作符，一定要知道 and 后表达式操作的对象是前表达式的结果，而 or 操作符则不是。例如：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /tmp "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.log"')]),a._v("\n")])])]),t("p",[a._v("它是一个 and 操作符，-name 表达式是在 -type 筛选的结果基础上再匹配文件名的。但如果是：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /tmp "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.log"')]),a._v("\n")])])]),t("p",[a._v("则 -name 操作的对象是 /tmp，所以返回结果中即有任意普通文件，也有任意 log 文件，但两者同名的文件只返回一次。")]),a._v(" "),t("p",[a._v("总之，要明确的是 or 操作符不以前面结果为基础，且 or 前面表达式为 true 的结果也会输出。")]),a._v(" "),t("h3",{attrs:{id:"_4-2-表达式说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-表达式说明"}},[a._v("#")]),a._v(" 4.2 表达式说明")]),a._v(" "),t("h4",{attrs:{id:"options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[a._v("#")]),a._v(" options")]),a._v(" "),t("p",[a._v("options 表示 find 的普通选项。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("-d：等同于-depth，为了与 FreeBSD, NetBSD, MacOS X and OpenBSD 兼容。\n--daystart:从本日开始计算时间,在使用（-amin、-atime、-cmin、-mmin和-mtime）选项时，时间从当前开始，而非24小时前；\n-depth：查找文件时，首先查找当前目录中的文件，然后再在其子目录中查找；\n-follow：该选项已经废弃，请使用-L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n-help, --help：显示find基本用法；\n-ignore_readdir_race：默认情况下，find无法获取文件状态时，将发出错误信息。使用该选项后，将不会报错；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-maxdepth")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("levels"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：设置最大搜索目录层级；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mindepth")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("levels"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：设置最小搜索目录层级；\n-mount：查找文件时不跨越文件系统mount位置，同-xdev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n-noignore_readdir_race：与-ignore_readdir_race作用相反，为默认选项；\n-noleaf：不去考虑目录至少需拥有两个硬连接存在；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-regextype")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：指明正则表达式语法规则；\n-version, --version：打印版本信息；\n-warn：打开警告；\n-nowarn：关闭警告；\n-xautofs：查找文件时不在autofs文件系统查询；\n-xdev：作用同-mount；\n")])])]),t("h4",{attrs:{id:"tests"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tests"}},[a._v("#")]),a._v(" tests")]),a._v(" "),t("p",[a._v("tests 表示 find 的比较测试。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("+n：大于指定的n；\n-n：小于指定的n；\nn：等于指定的n；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-amin")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：文件最后访问时间为n分钟之前；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-anewer")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：待查找的目标文件最后访问时间要比指定文件file的最后修改时间要新；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ctime")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：文件状态改变时间在n*24小时之前；\n-empty：寻找文件大小为0 Byte的文件或目录下没有任何子目录或文件的空目录；\n-executable：寻找可执行文件与可搜索的目录；\n-false：将find指令的返回值皆设为false；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fstype")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：只寻找指定文件系统类型下的文件或目录；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-gid")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：文件所属用户组ID为n；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-group")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("gname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":文件所属用户组名为gname；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ilname")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：与-lname作用相似，但匹配时忽略大小写；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：与-name作用相似，但匹配是忽略大小写。比如匹配模式是"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fo*"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-inum")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：查找文件inode节点号为n；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ipath")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：作用同-iwholename，该命令选项已被废弃，所以请不要使用它；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iregex")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：与-regex作用相同，但忽略大小写；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iwholename")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：作用与-iwholename相似，但忽略大小写；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-links")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("：文件有n个硬连接；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-lname")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找符号链接，所指文件内容符合指定模式pattern；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mmin")]),a._v(" n:查找在指定时间前被更改过的文件或目录，单位以分钟计算；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mtime")]),a._v(" n:查找指定时间前被更改过的文件或目录，单位以天（24h）计算；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":指定名称的文件或目录，\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-newer")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找最后修改时间比指定文件file还要新的文件；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-newerXY")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("reference"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":比指定的文件或者时间"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("reference"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("要新的文件，X和Y是占位符，可取值如下：\n\ta：reference的访问时间；\n\tB：reference的创建时间；\n\tc：reference的inode状态改变时间；\n\tm：reference的修改时间；\n\tt：reference为直接指定的时间。\n-nogroup:查无有效属组的文件文件或目录，即文件的属组在/etc/groups中不存在；\n-nouser:查无有效属主的文件，即文件的属主在/etc/passwd中不存；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找指定目录格式的文件或目录，如此可以避免对整个目录进行查找，比如 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./src/*sc"')]),a._v("可以避免对目录./inc/的查找；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("mode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找指定的权限的文件或目录，需要完全匹配；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" -"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("mode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找指定权限的文件或目录，不需要完全匹配，注意与不加横杠mode的区别；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" /"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("mode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找指定权限的文件或目录，不需要完全匹配，不需要每个类型的用户都满足，注意与mode、-"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("mode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("的区别；\n-readable:查找拥有可读权限的文件或目录；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-regex")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":文件名称匹配正则表达式pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-samefile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找inode名称为"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("的文件；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("cwbkMG"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找指定大小的文件；\n-true:将find指令的返回值皆设为false；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找指定类型的文件，类型c可取值：\n\tb - 块设备文件。\n\tc - 字符设备文件。\n\td - 目录。\n\tf - 普通文件\n\tl - 符号链接文件。\n\tp - 管道文件。\n\ts - socket。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-uid")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找用户ID为n的文件；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-used")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找文件或目录状态改变过之后，在n天内被访问过的文件或目录；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-user")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("uname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":查找符和指定所有者名称的文件或目录；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-wholename")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":等同于-path；\n-writable:具有可写权限的文件。它会考虑访问控制列表（access control lists）等的特殊权限，只要是可写就满足。它会忽略掉-perm的测试"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("不是writeable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xtype")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":等同于-type选项，除非文件是符号链接；当制定选项-P或-H时，连接文件所指文件类型是"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("则满足条件，如果指定选项-L，"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("为l才有效，表名查找符号链接；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-context")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":\n")])])]),t("h4",{attrs:{id:"actions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#actions"}},[a._v("#")]),a._v(" actions")]),a._v(" "),t("p",[a._v("actions 部分一般是执行某些命令或实现某些功能。这部分是 find 的 command line 部分。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("-delete:删除文件，如果删除成功则返回true，如果删除失败，将给出错误信息。"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-delete"')]),a._v("动作隐含了"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-depth"')]),a._v("这个option。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(":注意有个分号"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('";"')]),a._v("结尾，该action是用于执行给定的命令。如果命令的返回状态码为0则该action返回true，command后面的所有内容都被当作command的参数，直到分号"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('";"')]),a._v("为止，其中参数部分使用字符串"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{}"')]),a._v("时，它表示find找到的文件名，即在执行命令时，"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{}"')]),a._v("会被逐一替换为find到的文件名，"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{}"')]),a._v("可以出现在参数中的任何位置，只要出现，它都会被文件名替换。注意，分号"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('";"')]),a._v("需要转义，即"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\\;"')]),a._v("，如有需要，可以将"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{}"')]),a._v("用引号包围起来。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" +:这种-exec动作变种，只允许使用find查找到的文件一次；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-execdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(":与-exec相似，区别在于执行command时的working path是从匹配到的文件的所在目录；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-execdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" +:与-exec "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" +相似，区别也是在于命令的工作路径；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fls")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":总是返回true，将打印的结果输出到指定的文件file中；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fprint")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":总是返回true，将找到的文件的全路径输出到指定的文件file中；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fprint0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":类似于-print0，将结果写入文件file；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fprintf")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("format"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":类似于-printf,将结果写入指定的文件file；\n-ls:总是返回true。将找到的文件以"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ls -dils"')]),a._v("的格式打印出来，其中文件的size部分以KB为单位；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ok")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(":类似于-exec，但在执行命令前会交互式进行询问；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-okdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(":类似于-execdir，但在执行命令前会交互式进行询问；\n-print:总是返回true。这是默认的action，输出搜索到文件的全路径名，并尾随换行符"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v('"')]),a._v("。由于在使用"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-print"')]),a._v("时所有的结果都有换行符，如果直接将结果通过管道传递给管道右边的程序，应该要考虑到这一点：文件名中有空白字符"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("换行符、制表符、空格"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("将会被右边程序误分解，如文件"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ab c.txt"')]),a._v("将被认为是ab和c.txt两个文件，如不想被此分解影响，可考虑使用"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-print0"')]),a._v("替代"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-print"')]),a._v("将所有换行符替换为"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\0"}},[a._v("\\0")]),a._v('"')]),a._v("；\n-print0:总是返回true。输出搜索到文件的全路径名，并尾随空字符"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\0"}},[a._v("\\0")]),a._v('"')]),a._v("。由于尾随的是空字符，所以管道传递给右边的程序，然后只需对这个空字符进行识别分隔就能保证文件名不会因为其中的空白字符被误分解；\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-printf")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("format"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(":以指定的格式输出匹配的文件名；\n-prune:使用这一选项可以使find命令不在当前指定的目录中查找，如果同时使用-depth选项，那么-prune将被find命令忽略。比如：find /apps "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/apps/bin"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-prune")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" –print在/apps目录下查找文件，但不希望在/apps/bin目录下查找；\n\n-quit:立即退出，没有子进程会继续运作，但没有更多的路径，在命令行中指定将被处理。\n")])])]),t("h2",{attrs:{id:"_5-常用示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-常用示例"}},[a._v("#")]),a._v(" 5.常用示例")]),a._v(" "),t("p",[a._v("（1）在/logs目录中查找更改时间在5日以前的文件并删除它们。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /logs "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mtime")]),a._v(" +5 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("（2）列出当前目录及子目录下所有文件和文件夹。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("p",[a._v("（3）在/home目录下查找以.txt结尾的文件名。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /home "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 同上，但忽略大小写 ")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /home "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v("\n")])])]),t("p",[a._v("（4）当前目录及子目录下查找所有以.txt和.pdf结尾的文件。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.pdf"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#或")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.pdf"')]),a._v("\n")])])]),t("p",[a._v("（5）匹配文件路径或者文件。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /usr/ "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*local*"')]),a._v("\n")])])]),t("p",[a._v("（6）基于正则表达式匹配文件路径。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-regex")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('".*\\(\\.txt\\|\\.pdf\\)$"')]),a._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#同上，但忽略大小写")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iregex")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('".*\\(\\.txt\\|\\.pdf\\)$"')]),a._v(" \n")])])]),t("p",[a._v("（7）使用否定参数!，找出/home下不是以.txt结尾的文件。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /home "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v("\n")])])]),t("p",[a._v("（8）根据文件类型进行搜索。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("类型参数"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" \n类型参数列表： \n\tc - 字符设备文件。\n\td - 目录。\n\tf - 普通文件\n\tl - 符号链接文件。\n\tp - 管道文件。\n\ts - socket。\n")])])]),t("p",[a._v("（9）向下搜索的最大深度限制为3。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-maxdepth")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f \n")])])]),t("p",[a._v("（10）搜索出深度距离当前目录至少2个子目录的所有文件。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mindepth")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f\n")])])]),t("p",[a._v("（11）根据文件时间戳进行搜索,搜索恰好在七天前被访问过的所有文件。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-atime")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("\n")])])]),t("p",[a._v("（12）搜索超过七天内被访问过的所有文件。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-atime")]),a._v(" +7\n")])])]),t("p",[a._v("（13）搜索访问时间超过10分钟的所有文件。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-amin")]),a._v(" +10\n")])])]),t("p",[a._v("（14）找出比file.log修改时间更长的所有文件。find")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-newer")]),a._v(" file.log\n")])])]),t("p",[a._v("（15）根据文件大小进行匹配。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" 文件大小\n\n单元文件大小单元： \n\tb —— 块（512字节）\n\tc —— 字节\n\tw —— 字（2字节）\n\tk —— 千字节 \n\tM —— 兆字节\n\tG —— 吉字节\n\t\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 搜索大于10KB的文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" +10k \n\t\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 搜索小于10KB的文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-10k")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 搜索等于10KB的文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" 10k\n")])])]),t("p",[a._v("（16）删除匹配文件,#删除当前目录下所有.txt文件。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-delete")]),a._v("\n")])])]),t("p",[a._v("（17）根据文件权限/所有权进行匹配。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前目录下搜索出权限为777的文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("777")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找出当前目录下权限不是644的php文件 ")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.php"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("644")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找出当前目录用户tom拥有的所有文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-user")]),a._v(" tom\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找出当前目录用户组sunk拥有的所有文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-group")]),a._v(" sunk\n")])])]),t("p",[a._v("（18）借助-exec选项与其他命令结合使用。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找出当前目录下所有root的文件，并把所有权更改为用户tom")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" .-type f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-user")]),a._v(" root "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chown")]),a._v(" tom "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n上例中，"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" 用于与-exec选项结合使用来匹配所有文件，然后会被替换为相应的文件名。 \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找出自己家目录下所有的.txt文件并删除")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/. "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ok")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n上例中，-ok和-exec行为一样，不过它会给出提示，是否执行相应的操作。\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找当前目录下所有.txt文件并把他们拼接起来写入到all.txt文件中")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" all.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将30天前的.log文件移动到old目录中")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mtime")]),a._v(" +30 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.log"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" old "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 找出当前目录下所有.txt文件并以“File:文件名”的形式打印出来")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("printf")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"File: %s'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 因为单行命令中-exec参数中无法使用多个命令，以下方法可以实现在-exec之后接受多条命令")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" ./text.sh "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),t("p",[a._v("（19）搜索但跳出指定的目录,查找当前目录或者子目录下所有.txt文件，但是跳过子目录sk。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./sk"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-prune")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print")]),a._v("\n")])])]),t("p",[a._v("（20）要列出所有大小为零的文件。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-empty")]),a._v("\n")])])]),t("p",[a._v("（21）find 命令 -perm 的权限的加减号的区别。\n首先创建了 4 个具有 suid 和 sgid 属性的文件，因为是大写的 S，所以实际上无效，但不影响我们来说明 -perm 选项指定权限时加减号的区别。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" ./testdir\n------S--- "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2016")]),a._v("-11-06 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(":39 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2000")]),a._v("\n---S------ "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2016")]),a._v("-11-06 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(":39 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4000")]),a._v("\n---S--S--- "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2016")]),a._v("-11-06 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(":39 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6000")]),a._v("\n-rwS--S--- "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2016")]),a._v("-11-06 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(":39 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6600")]),a._v("\n")])])]),t("p",[a._v("假定我执行")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6000")]),a._v("\n")])])]),t("p",[a._v("那么我们显然可以得到下面的结果")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("./60000\n")])])]),t("p",[a._v("这属于完全匹配。如果执行"),t("code",[a._v("find . -type f -perm -6000")]),a._v("呢，其结果是：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("./6000\n./6600\n")])])]),t("p",[a._v("这里的横杠-表示权限位有1的位置一定要正确匹配，其他权限位无所谓。这里要转成二进制来说，首先6000转成三位的二进制是下面这个样子：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("110 000 000 000\n")])])]),t("p",[a._v("这表示前面两个 1 一定要匹配，其他无所谓。那能匹配的就是 6000、6600 这两个文件，其权限二进制转换过来分别是：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("110 000 000 000\n110 110 000 000\n")])])]),t("p",[a._v("而如果是执行"),t("code",[a._v("find . -type f -perm +6000")]),a._v("呢？我们看看结果：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("./6000\n./2000\n./4000\n./6600\n")])])]),t("p",[a._v("+号的意思是，每一组的权限，只要有一个组拥有给定的权限，就满足条件，也就是说前2位中，只要有一个1就行，所以上面的都符合要求，因为翻译成二进制变成：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("110 000 000 000\n010 000 000 000\n100 000 000 000\n110 110 000 000\n")])])]),t("p",[a._v("所以，从上面的结果可以看出，命令"),t("code",[a._v("find . -type f -perm +6000")]),a._v("就是指定目录下所有具有suid或者sgid属性的文件。")]),a._v(" "),t("p",[a._v("注意：find的 +mode已经废弃，建议使用/mode来代替+mode。")]),a._v(" "),t("p",[a._v("（22）删除文件大小为零的文件。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ./ "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ./ "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ok")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ./ "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ./ "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v("\n")])])]),t("p",[a._v("-ok 和 -exec 的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。例如"),t("code",[a._v('find . -name "*.conf" -mtime +5 -ok rm {} \\;')]),a._v("，在当前目录中查找所有文件名以.LOG结尾、最近更改时间在5日以上的文件，并删除它们，只不过在删除之前先给出提示。")]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"参考文献"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[a._v("#")]),a._v(" 参考文献")]),a._v(" "),t("p",[t("a",{attrs:{href:"http://man7.org/linux/man-pages/man1/find.1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("find(1) - Linux manual page - man7.org"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/f-ck-need-u/p/6995529.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Linux find运行机制详解"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/skynet/archive/2010/12/25/1916873.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("【日常小记】linux中强大且常用命令：find、grep"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/wanqieddy/archive/2011/06/09/2076785.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Linux find 用法示例"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("鸟哥.鸟哥的私房菜基础学习篇第三版[M].北京：人民邮电出版社，2010：183-184")]),a._v(" "),t("Vssue",{attrs:{title:"find"}})],1)}),[],!1,null,null,null);t.default=n.exports}}]);